<Application x:Class="AppUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AppUI"
             xmlns:views="clr-namespace:AppUI.Views"
             xmlns:vm="clr-namespace:AppUI.ViewModels">
    <Application.Resources>
        <!--Color Resource-->
        <!-- WireFrame定義色 -->
        <Color x:Key="BackColor">#F2F2F2</Color>
        <Color x:Key="BlackColor">#000000</Color>
        <Color x:Key="ButtonNormalColor">#DEEBF7</Color>
        <Color x:Key="ButtonActiveColor">#9DC3E6</Color>
        <Color x:Key="StatusColor">#E2F0D9</Color>
        
        <!-- その他汎用色 -->
        <Color x:Key="DarkGrayColor">#666666</Color>
        <Color x:Key="ActiveEffectColor">#E2F0D9</Color>
        <Color x:Key="ListHeaderColor">#17B303</Color>
        <Color x:Key="DemoMarkerColor">#8017B303</Color>

        <!-- 未使用 -->
        <Color x:Key="WhiteEffectColor">#E0F7FA</Color>
        <Color x:Key="GrayEffectColor">#E0E0E0</Color>

        <Color x:Key="InvalidFontEffectColor">#AAAAAA</Color>
        <Color x:Key="InvalidBorderEffectColor">#9DC3E6</Color>

        <SolidColorBrush x:Key="BackBrush" Color="{StaticResource BackColor}" />
        <SolidColorBrush x:Key="FontBrush" Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="ButtonNormalBrush" Color="{StaticResource ButtonNormalColor}" />
        <SolidColorBrush x:Key="ButtonActiveBrush" Color="{StaticResource ButtonActiveColor}" />
        <SolidColorBrush x:Key="ViewerBackBrush" Color="{StaticResource BlackColor}" />
        <SolidColorBrush x:Key="ViewerLoadMessageBrush" Color="{StaticResource DarkGrayColor}" />
        <SolidColorBrush x:Key="StatusBrush" Color="{StaticResource StatusColor}" />
        <SolidColorBrush x:Key="ActiveEffectBrush" Color="{StaticResource ActiveEffectColor}" />
        <SolidColorBrush x:Key="ListHeaderBrush" Color="{StaticResource ListHeaderColor}" />
        <SolidColorBrush x:Key="DemoMarkerBrush" Color="{StaticResource DemoMarkerColor}" />

        <SolidColorBrush x:Key="WhiteEffectBrush" Color="{StaticResource WhiteEffectColor}" />
        <SolidColorBrush x:Key="GrayEffectBrush" Color="{StaticResource GrayEffectColor}" />

        <SolidColorBrush x:Key="InvalidFontEffectBrush" Color="{StaticResource InvalidFontEffectColor}" />
        <SolidColorBrush x:Key="InvalidBorderEffectBrush" Color="{StaticResource InvalidBorderEffectColor}" />

        <!--Label-->
        <Style x:Key="LabelBase" TargetType="Label">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="ExtraBold" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tag.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource StatusBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource StatusBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Label" BasedOn="{StaticResource LabelBase}"/>

        <Style x:Key="DoubleTriangleIcon" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Grid>
                            <Polygon x:Name="ButtonTriangle" Points="0,0 30,19 0,38"
                                Stroke="{StaticResource BorderBrush}" StrokeThickness="1">
                                <Polygon.Fill>
                                    <SolidColorBrush Color="{StaticResource BackColor}"/>
                                </Polygon.Fill>
                            </Polygon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DownTriangleIcon" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Grid>
                            <Polygon x:Name="ButtonTriangle" Points="0,0 38,0 19,30 0,0"
                                Stroke="{StaticResource BorderBrush}" StrokeThickness="1">
                                <Polygon.Fill>
                                    <SolidColorBrush Color="{StaticResource BackColor}"/>
                                </Polygon.Fill>
                            </Polygon>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!--TextBlock-->
        <Style x:Key="TextBlockBase" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="ExtraBold" />
        </Style>

        <Style x:Key="TextBlockMarkerPageFotterMessage" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
            <Setter Property="FontSize" Value="30" />
        </Style>

        <Style x:Key="TextBlockMarkerRoiImageTitle" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
            <Setter Property="FontSize" Value="40" />
        </Style>

        <Style x:Key="InstructionsText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <!--TextBlock in Button -->
        <Style x:Key="TextBlockAssetIcon" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
            <Setter Property="FontSize" Value="40"/>
            <Setter Property="FontWeight" Value="ExtraLight"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
    <!--Button-->
        <Style x:Key="RoundedButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
            <Setter Property="Width" Value="140" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="ExtraBold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <!--<Border.Effect>
                                <DropShadowEffect Color="{StaticResource BlackColor}"
                                          BlurRadius="10" 
                                          ShadowDepth="4" 
                                          Direction="270" 
                                          Opacity="0.3"/>
                            </Border.Effect>-->
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource InvalidFontEffectBrush}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InvalidBorderEffectBrush}"/>
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tag.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ButtonActiveBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}"/>
        <Style x:Key="RoundedButtonStyleShort" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
            <Setter Property="Width" Value="100"/>
        </Style>

        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="FontSize" Value="40" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TriangleButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon x:Name="ButtonTriangle" Points="0,0 118,55 0,110"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="1"
                                Fill="{TemplateBinding Background}"/>
                            <ContentPresenter TextBlock.FontSize="20"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonTriangle" Property="Fill" Value="{StaticResource ButtonNormalBrush}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tag.IsActive, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ButtonActiveBrush}"/>
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource FontBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OptionButton" TargetType="Button" BasedOn="{StaticResource RoundedButtonStyle}">
            <Setter Property="Width" Value="163" />
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>

    <!--ToggleButton-->
        <Style x:Key="IconToggleButton" TargetType="ToggleButton">
            <Setter Property="Width" Value="100" />
            <Setter Property="FontSize" Value="30" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <Style x:Key="RoundedToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <!--<Border.Effect>
                                <DropShadowEffect Color="{StaticResource BlackColor}"
                                          BlurRadius="10" 
                                          ShadowDepth="4" 
                                          Direction="270" 
                                          Opacity="0.3"/>
                            </Border.Effect>-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonNormalBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    <!--RadioButton-->
        <Style x:Key="RadioAsButtonStyle" TargetType="RadioButton">
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="Border"
                                Background="{StaticResource ButtonNormalBrush}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonNormalBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RoundedRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}" />
            <Setter Property="Foreground" Value="{StaticResource FontBrush}" />
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <!--<Border.Effect>
                                <DropShadowEffect Color="{StaticResource BlackColor}"
                                          BlurRadius="10" 
                                          ShadowDepth="4" 
                                          Direction="270" 
                                          Opacity="0.3"/>
                            </Border.Effect>-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonNormalBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DrawingRadioButtonStyle" TargetType="RadioButton">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonNormalBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BaseRoundRadioButton" TargetType="RadioButton">
            <Setter Property="Background" Value="{StaticResource ButtonNormalBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="999">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonNormalBrush}" />
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonActiveBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundRadioButtonSmall" TargetType="RadioButton" BasedOn="{StaticResource BaseRoundRadioButton}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="RoundRadioButtonMedium" TargetType="RadioButton" BasedOn="{StaticResource BaseRoundRadioButton}">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="RoundRadioButtonLarge" TargetType="RadioButton" BasedOn="{StaticResource BaseRoundRadioButton}">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="FontSize" Value="16"/>
        </Style>
        <Style x:Key="RoundRadioButtonXLarge" TargetType="RadioButton" BasedOn="{StaticResource BaseRoundRadioButton}">
            <Setter Property="Width" Value="55"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>

    <!--ListView-->
        <Style TargetType="ListView">
            <Setter Property="Width" Value="501"/>
            <Setter Property="Height" Value="519"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource BackBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <DockPanel>
                                <GridViewHeaderRowPresenter
                                    DockPanel.Dock="Top"
                                    Margin="0"
                                    Columns="{Binding View.Columns, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ScrollViewer Focusable="True"
                                      Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ListViewItem">
            <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource BackBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                    <Setter Property="Background" Value="{StaticResource BackBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--GridViewColumnHeader-->
        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Background" Value="{StaticResource BackBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <DataTemplate DataType="{x:Type vm:HomeScreenViewModels}">
            <views:HomeScreen />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MarkerRoiSettingViewModel}">
            <views:MarkerRoiSettings />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MarkerPageHeaderViewModel}">
            <views:MarkerPageHeader />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MarkerPageFooterViewModel}">
            <views:MarkerPageFooter />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:StateProgressViewModel}">
            <views:StateProgress />
        </DataTemplate>
    </Application.Resources>
</Application>
